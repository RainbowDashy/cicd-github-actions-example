# Use action to create the migration
name: Create Migration with Action

on:
  pull_request:
    branches:
      - main
    paths:
      - "**/*.up.sql"

jobs:
  bytebase-approve-migration:
    runs-on: ubuntu-latest
    env:
      BYTEBASE_URL: "https://bytebase-ci.zeabur.app"
      SERVICE_ACCOUNT: "ci@service.bytebase.com"
      PROJECT: "example"
      ISSUE_TITLE: "[${{ github.repository }}#${{ github.event.number }}] ${{ github.event.pull_request.title }}"
      DESCRIPTION: "Triggered by ${{ github.event.repository.html_url }}/pull/${{ github.event.number }} ${{ github.event.pull_request.title }}"
    name: Approve Migration
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Bytebase
        id: login
        uses: ./.github/actions/login
        with:
          url: ${{ env.BYTEBASE_URL }}
          service-account: ${{ env.SERVICE_ACCOUNT }}
          service-account-key: ${{ secrets.BYTEBASE_PASSWORD }}
      - name: Find issue
        id: find
        uses: ./.github/actions/find-issue
        with:
          url: ${{ env.BYTEBASE_URL }}
          token: ${{ steps.login.outputs.token }}
          project-id: ${{ env.PROJECT }}
          title: ${{ env.ISSUE_TITLE }}
      - name: Extract issue uid
        id: extract
        run: |
          if [ -z "${{ steps.find.outputs.issue }}" ]; then
            echo "Bytebase issue not found, will create one."
          else
            issue_uid=$(echo '${{ steps.find.outputs.issue }}' | jq -r '.uid')
            echo "Bytebase issue already created ${{ env.BYTEBASE_URL }}/projects/${{ env.PROJECT }}/issues/${issue_uid}"
          fi
      - name: Create issue
        id: create
        uses: ./.github/actions/create-issue
        if: steps.find.outputs.issue == ''
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: "**/*.up.sql"
          url: ${{ env.BYTEBASE_URL }}
          token: ${{ steps.login.outputs.token }}
          project-id: ${{ env.PROJECT }}
          database: "instances/prod-instance/databases/example"
          title: ${{ env.ISSUE_TITLE }}
          description: ${{ env.DESCRIPTION }}
